# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    to-do.txt                                          :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: samusanc <samusanc@student.42madrid>       +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2023/07/31 17:37:02 by samusanc          #+#    #+#              #
#    Updated: 2023/07/31 17:55:55 by samusanc         ###   ########.fr        #
#                                                                              #
# **************************************************************************** #
1. **Antes de empezar:**
   - Ambos miembros del equipo deben clonar el repositorio remoto en sus máquinas locales usando `git clone <URL_del_repositorio>` para obtener una copia del proyecto.

2. **Inicio de trabajo:**
   - Cada miembro se sienta en su escritorio y antes de comenzar a trabajar, asegúrense de tener la versión más actualizada del código en su rama principal (`main` o `master`) ejecutando `git pull origin main` o `git pull origin master`.

3. **Crear una rama para la tarea:**
   - Antes de empezar a trabajar en una nueva tarea, cada miembro del equipo debe crear una nueva rama para esa tarea utilizando `git checkout -b nombre_de_la_rama`.

4. **Trabajar en la tarea:**
   - Cada miembro trabaja en su rama específica, realizando cambios y commits locales de manera independiente.

5. **Commit regularmente:**
   - Es importante hacer commits de manera regular y con mensajes descriptivos. Los commits atómicos y bien documentados facilitan la revisión de código y el seguimiento de los cambios realizados.

6. **Actualizar rama antes de push:**
   - Antes de hacer un `push`, cada miembro debe asegurarse de que su rama esté actualizada con respecto a la rama principal. Esto se puede hacer con `git pull origin main` o `git pull origin master`. En caso de conflictos, deben resolverlos antes de continuar.

7. **Push a la rama remota:**
   - Una vez que un miembro ha completado una tarea o desea compartir su trabajo con el otro miembro del equipo, debe hacer un `push` de su rama a la rama remota usando `git push origin nombre_de_la_rama`.

8. **Solicitar revisión de código:**
   - El miembro que ha hecho el `push` debe crear una solicitud de "pull request" o "merge request" en la plataforma de alojamiento del repositorio (por ejemplo, en GitHub, GitLab o Bitbucket) para que el otro miembro revise el código antes de fusionarlo con la rama principal.

9. **Revisar y discutir cambios:**
   - El miembro del equipo que recibió la solicitud de revisión debe revisar el código, hacer comentarios o sugerir cambios si es necesario, y discutir cualquier aspecto relevante con el autor de la solicitud.

10. **Fusionar cambios:**
    - Una vez que ambos miembros del equipo están satisfechos con los cambios y se ha realizado la revisión, se puede proceder a fusionar la rama con la rama principal. Esto se puede hacer a través de la plataforma de alojamiento o localmente utilizando `git merge` o `git pull` (en caso de haber usado pull request).

11. **Actualizar la rama principal:**
    - Una vez que los cambios están fusionados en la rama principal, ambos miembros deben asegurarse de tener la versión más actualizada de la rama principal en sus máquinas locales usando `git pull origin main` o `git pull origin master`.

12. **Repetir el proceso:**
    - El flujo de trabajo continúa repitiéndose para cada tarea o funcionalidad nueva que se agregue al proyecto.

Siguiendo este flujo de trabajo, ambos miembros del equipo pueden trabajar de manera colaborativa en el proyecto, mantener el código actualizado y revisar los cambios realizados antes de que se fusionen con la rama principal. Esto ayuda a mantener un desarrollo ordenado y evita conflictos y problemas en el código.
